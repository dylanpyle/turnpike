/*
 * turnpike-sm v0.1.0
 * https://github.com/dylanpyle/turnpike
 * (c) 2014 Dylan Pyle <me@dylanpyle.com>
 * Released under the MIT license
 */
(function(){var t,e,n,i=[].slice;t=function(){function t(t){var e,n;n=t.start,e=t.events,this._state=n,this._events=e,this._enterCallbacks=[],this._exitCallbacks=[]}return t.prototype.act=function(){var t,e,n,r,s,o,u,a,l,c,f;if(r=arguments[0],t=2<=arguments.length?i.call(arguments,1):[],n=null!=(l=this._events.filter(function(t){return function(e){var n;return e.ev===r&&((n=e.from)===t._state||"*"===n)}}(this))[0])?l.to:void 0,!n||n===this._state)return!1;for(c=this._exitCallbacks.filter(function(t){return function(e){return e.state===t._state}}(this)),s=0,u=c.length;u>s;s++)e=c[s],e.cb.apply(e,t);for(f=this._enterCallbacks.filter(function(){return function(t){return t.state===n}}(this)),o=0,a=f.length;a>o;o++)e=f[o],e.cb.apply(e,t);return this._state=n},t.prototype._normalizeListeners=function(t,e){return"object"==typeof t?Object.keys(t).map(function(e){return{state:e,cb:t[e]}}):[{state:t,cb:e}]},t.prototype.onEnter=function(t,e){return this._enterCallbacks=this._enterCallbacks.concat(this._normalizeListeners(t,e))},t.prototype.onExit=function(t,e){return this._exitCallbacks=this._exitCallbacks.concat(this._normalizeListeners(t,e))},t.prototype.getState=function(){return this._state},t}(),("undefined"!=typeof module&&null!==module?module.exports:void 0)?module.exports=t:("undefined"!=typeof define&&null!==define?define.amd:void 0)?define(function(){return t}):(n=this,e=n.Turnpike,n.Turnpike=t,t.noConflict=function(){return n.Turnpike=e})}).call(this);